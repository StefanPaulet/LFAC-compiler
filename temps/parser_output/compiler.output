Nonterminals useless in grammar

    N_CONSTANT_VALUE
    N_EXPRESSION
    N_PARAMETERS


Terminals unused in grammar

    T_INT_NUMBER
    T_CHAR_VALUE
    T_FLOAT_NUMBER
    T_BOOL_VALUE
    T_STRING_VALUE
    '-'
    '+'
    '*'
    '/'
    ','


Rules useless in grammar

    9 N_CONSTANT_VALUE: T_INT_NUMBER
   10                 | T_FLOAT_NUMBER
   11                 | T_CHAR_VALUE
   12                 | T_BOOL_VALUE
   13                 | T_STRING_VALUE

   14 N_EXPRESSION: N_EXPRESSION '+' N_EXPRESSION
   15             | N_EXPRESSION '-' N_EXPRESSION
   16             | N_EXPRESSION '*' N_EXPRESSION
   17             | N_EXPRESSION '/' N_EXPRESSION
   18             | '(' N_EXPRESSION ')'
   19             | '-' N_EXPRESSION
   20             | N_CONSTANT_VALUE
   21             | T_IDENTIFIER
   22             | T_IDENTIFIER '(' N_PARAMETERS ')'

   23 N_PARAMETERS: N_EXPRESSION ',' N_PARAMETERS
   24             | N_EXPRESSION


Grammar

    0 $accept: N_START $end

    1 N_START: N_DECLARATION T_MAIN_IDENTIFIER '(' ')' '{' '}'

    2 N_DECLARATION: N_DECLARATION T_TYPE T_IDENTIFIER ';'
    3              | N_DECLARATION T_IDENTIFIER T_IDENTIFIER ';'
    4              | N_DECLARATION N_CLASS_DECLARATION
    5              | ε

    6 $@1: ε

    7 N_CLASS_DECLARATION: T_CLASS T_IDENTIFIER '{' M_CLASS_BLOCK_BEGIN N_DECLARATION '}' $@1 ';'

    8 M_CLASS_BLOCK_BEGIN: ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1
    ')' (41) 1
    '*' (42)
    '+' (43)
    ',' (44)
    '-' (45)
    '/' (47)
    ';' (59) 2 3 7
    '{' (123) 1 7
    '}' (125) 1 7
    error (256)
    T_INT_NUMBER <intValue> (258)
    T_CHAR_VALUE <charValue> (259)
    T_FLOAT_NUMBER <floatValue> (260)
    T_BOOL_VALUE <boolValue> (261)
    T_STRING_VALUE <stringValue> (262)
    T_MAIN_IDENTIFIER (263) 1
    T_CLASS (264) 7
    T_TYPE <stringValue> (265) 2
    T_IDENTIFIER <stringValue> (266) 2 3 7
    UMINUS (267)


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    N_START (24)
        on left: 1
        on right: 0
    N_DECLARATION <scopeValue> (25)
        on left: 2 3 4 5
        on right: 1 2 3 4 7
    N_CLASS_DECLARATION <scopeValue> (26)
        on left: 7
        on right: 4
    $@1 (27)
        on left: 6
        on right: 7
    M_CLASS_BLOCK_BEGIN <stringValue> (28)
        on left: 8
        on right: 7


State 0

    0 $accept: • N_START $end

    $default  reduce using rule 5 (N_DECLARATION)

    N_START        go to state 1
    N_DECLARATION  go to state 2


State 1

    0 $accept: N_START • $end

    $end  shift, and go to state 3


State 2

    1 N_START: N_DECLARATION • T_MAIN_IDENTIFIER '(' ')' '{' '}'
    2 N_DECLARATION: N_DECLARATION • T_TYPE T_IDENTIFIER ';'
    3              | N_DECLARATION • T_IDENTIFIER T_IDENTIFIER ';'
    4              | N_DECLARATION • N_CLASS_DECLARATION

    T_MAIN_IDENTIFIER  shift, and go to state 4
    T_CLASS            shift, and go to state 5
    T_TYPE             shift, and go to state 6
    T_IDENTIFIER       shift, and go to state 7

    N_CLASS_DECLARATION  go to state 8


State 3

    0 $accept: N_START $end •

    $default  accept


State 4

    1 N_START: N_DECLARATION T_MAIN_IDENTIFIER • '(' ')' '{' '}'

    '('  shift, and go to state 9


State 5

    7 N_CLASS_DECLARATION: T_CLASS • T_IDENTIFIER '{' M_CLASS_BLOCK_BEGIN N_DECLARATION '}' $@1 ';'

    T_IDENTIFIER  shift, and go to state 10


State 6

    2 N_DECLARATION: N_DECLARATION T_TYPE • T_IDENTIFIER ';'

    T_IDENTIFIER  shift, and go to state 11


State 7

    3 N_DECLARATION: N_DECLARATION T_IDENTIFIER • T_IDENTIFIER ';'

    T_IDENTIFIER  shift, and go to state 12


State 8

    4 N_DECLARATION: N_DECLARATION N_CLASS_DECLARATION •

    $default  reduce using rule 4 (N_DECLARATION)


State 9

    1 N_START: N_DECLARATION T_MAIN_IDENTIFIER '(' • ')' '{' '}'

    ')'  shift, and go to state 13


State 10

    7 N_CLASS_DECLARATION: T_CLASS T_IDENTIFIER • '{' M_CLASS_BLOCK_BEGIN N_DECLARATION '}' $@1 ';'

    '{'  shift, and go to state 14


State 11

    2 N_DECLARATION: N_DECLARATION T_TYPE T_IDENTIFIER • ';'

    ';'  shift, and go to state 15


State 12

    3 N_DECLARATION: N_DECLARATION T_IDENTIFIER T_IDENTIFIER • ';'

    ';'  shift, and go to state 16


State 13

    1 N_START: N_DECLARATION T_MAIN_IDENTIFIER '(' ')' • '{' '}'

    '{'  shift, and go to state 17


State 14

    7 N_CLASS_DECLARATION: T_CLASS T_IDENTIFIER '{' • M_CLASS_BLOCK_BEGIN N_DECLARATION '}' $@1 ';'

    $default  reduce using rule 8 (M_CLASS_BLOCK_BEGIN)

    M_CLASS_BLOCK_BEGIN  go to state 18


State 15

    2 N_DECLARATION: N_DECLARATION T_TYPE T_IDENTIFIER ';' •

    $default  reduce using rule 2 (N_DECLARATION)


State 16

    3 N_DECLARATION: N_DECLARATION T_IDENTIFIER T_IDENTIFIER ';' •

    $default  reduce using rule 3 (N_DECLARATION)


State 17

    1 N_START: N_DECLARATION T_MAIN_IDENTIFIER '(' ')' '{' • '}'

    '}'  shift, and go to state 19


State 18

    7 N_CLASS_DECLARATION: T_CLASS T_IDENTIFIER '{' M_CLASS_BLOCK_BEGIN • N_DECLARATION '}' $@1 ';'

    $default  reduce using rule 5 (N_DECLARATION)

    N_DECLARATION  go to state 20


State 19

    1 N_START: N_DECLARATION T_MAIN_IDENTIFIER '(' ')' '{' '}' •

    $default  reduce using rule 1 (N_START)


State 20

    2 N_DECLARATION: N_DECLARATION • T_TYPE T_IDENTIFIER ';'
    3              | N_DECLARATION • T_IDENTIFIER T_IDENTIFIER ';'
    4              | N_DECLARATION • N_CLASS_DECLARATION
    7 N_CLASS_DECLARATION: T_CLASS T_IDENTIFIER '{' M_CLASS_BLOCK_BEGIN N_DECLARATION • '}' $@1 ';'

    T_CLASS       shift, and go to state 5
    T_TYPE        shift, and go to state 6
    T_IDENTIFIER  shift, and go to state 7
    '}'           shift, and go to state 21

    N_CLASS_DECLARATION  go to state 8


State 21

    7 N_CLASS_DECLARATION: T_CLASS T_IDENTIFIER '{' M_CLASS_BLOCK_BEGIN N_DECLARATION '}' • $@1 ';'

    $default  reduce using rule 6 ($@1)

    $@1  go to state 22


State 22

    7 N_CLASS_DECLARATION: T_CLASS T_IDENTIFIER '{' M_CLASS_BLOCK_BEGIN N_DECLARATION '}' $@1 • ';'

    ';'  shift, and go to state 23


State 23

    7 N_CLASS_DECLARATION: T_CLASS T_IDENTIFIER '{' M_CLASS_BLOCK_BEGIN N_DECLARATION '}' $@1 ';' •

    $default  reduce using rule 7 (N_CLASS_DECLARATION)
